version: "3"

services:
  #php
  php:
    container_name: ${CONTAINER_NAME}_php
    build:
      context: .Docker/php
      args:
        - PHP_VERSION=php:${PHP_VERSION}-fpm
        - TZ=${TZ}
    volumes:
      - ${HOST_DIR}:${CONTAINER_DIR}
      - ${LOG_DIR}/php:/var/log/php
      - ./.Docker/php/php.ini:/usr/local/etc/php/php.ini
    ports:
      - ${PHP_PORT}:9000
    working_dir: ${CONTAINER_DIR}
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=${MYSQL_DB_HOST}
      - DB_DATABASE=${MYSQL_DB_NAME}
      - DB_USERNAME=${MYSQL_DB_USER}
      - DB_PASSWORD=${MYSQL_DB_USER_PASS}
      - DB_ROOT_PASSWORD=${MYSQL_DB_ROOT_PASS}
      - TZ=${TZ}

  #mysql
  mysql:
    container_name: ${CONTAINER_NAME}_mysql
    build:
      context: .Docker/mysql
      args:
        - MYSQL_VERSION=mysql:${MYSQL_VERSION}
    volumes:
      - ${HOST_DIR}:${CONTAINER_DIR}
      - ${LOG_DIR}/mysql:/var/log/mysql
      - ./.Docker/mysql/data:/var/lib/mysql
      - ./.Docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - ${MYSQL_PORT}:3306
    depends_on:
      - php
    environment:
      - MYSQL_DATABASE=${MYSQL_DB_NAME}
      - MYSQL_USER=${MYSQL_DB_USER}
      - MYSQL_PASSWORD=${MYSQL_DB_USER_PASS}
      - MYSQL_ROOT_PASSWORD=${MYSQL_DB_ROOT_PASS}
      - TZ=${TZ}

  #postgres
  postgres:
    container_name: ${CONTAINER_NAME}_postgres
    build:
      context: .Docker/postgres
      args:
        - POSTGRES_VERSION=postgres:${POSTGRES_VERSION}
    volumes:
      - ${HOST_DIR}:${CONTAINER_DIR}
      - ${LOG_DIR}/postgres:/var/log/postgres
      - .Docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - .Docker/postgres/data:/var/lib/postgresql/data
      - .Docker/postgres/logs:/var/lib/pgsql/data/pg_log #TODO:要修正
      - .Docker/postgres/postgresql.conf:/var/lib/pgsql/data/postgresql.conf
    ports:
      - ${POSTGRES_PORT}:5432
    depends_on:
      - php
    environment:
      - TZ=${TZ}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - PGDATA=${POSTGRES_DATA}
    #      - POSTGRES_INITDB_ARGS=
    #      - POSTGRES_INITDB_WALDIR=
    user: root

  #nginx
  nginx:
    container_name: ${CONTAINER_NAME}_nginx
    build:
      context: .Docker/nginx
      args:
        - NGINX_VERSION=nginx:${NGINX_VERSION}
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      - php
    volumes:
      - ${HOST_DIR}:${CONTAINER_DIR}
      - ${LOG_DIR}/nginx:/var/log/nginx
      - ./.Docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./.Docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    environment:
      - TZ=${TZ}

  #apache
  apache:
    container_name: ${CONTAINER_NAME}_apache
    build:
      context: .Docker/apache
      args:
        - APACHE_VERSION=httpd:${APACHE_VERSION}
    ports:
      - ${APACHE_PORT}:80
    depends_on:
      - php
    volumes:
      - ${HOST_DIR}:${CONTAINER_DIR}
      - ${LOG_DIR}/apache:/var/log/apache
      - ./.Docker/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./.Docker/apache/index.html:/usr/local/apache2/htdocs/index.html

  # workspace
  workspace:
    container_name: ${CONTAINER_NAME}_workspace
    build:
      context: .Docker/workspace
      args:
        - PHP_VERSION=${PHP_VERSION}
        - NODE_VERSION=${NODE_VERSION}
    volumes:
      - ${HOST_DIR}:${CONTAINER_DIR}
    working_dir: ${CONTAINER_DIR}


  #mailhog
  #  mailhog:

volumes:
  db-store: